---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 7.3.11
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 1
    # admin:
    #   existingSecret: "grafana-secret"
    #   userKey: admin-user
    #   passwordKey: admin-password
    grafana.ini:
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      panels:
        disable_sanitize_html: true
      news:
        news_feed_enabled: false
      server:
        domain: &host "{{ .Release.Name }}.${SECRET_DOMAIN_SECONDARY}"
        root_url: "https://{{ .Release.Name }}.${SECRET_DOMAIN_SECONDARY}"
      auth:
        signout_redirect_url: "https://auth.${SECRET_DOMAIN}/application/o/grafana/end-session/"
        oauth_auto_login: true
      auth.generic_oauth:
        name: authentik
        enabled: true
        scopes: "openid profile email"
        auth_url: "https://auth.${SECRET_DOMAIN}/application/o/authorize/"
        token_url: "https://auth.${SECRET_DOMAIN}/application/o/token/"
        api_url: "https://auth.${SECRET_DOMAIN}/application/o/userinfo/"
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || contains(groups, 'Grafana Users') && 'Viewer'
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'monitoring'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/monitoring
    dashboardsConfigMaps:
      monitoring: grafana-dashboards
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-server.monitoring
            access: proxy
            isDefault: true
          - name: NUT
            type: influxdb
            url: http://influxdb.monitoring:8086
            access: proxy
            database: nutups
          - name: Proxmox
            type: influxdb
            url: http://influxdb.monitoring:8086
            access: proxy
            database: homelab_proxmox
          - name: Speedtest
            type: influxdb
            url: http://influxdb.monitoring:8086
            access: proxy
            database: speedtest
          - name: Home Assistant
            type: influxdb
            url: http://influxdb.monitoring:8086
            access: proxy
            database: home_assistant
          - name: Sun and Moon
            type: fetzerch-sunandmoon-datasource
            latitude: "14.56078940462268"
            longitude: "121.04432272082893"
    downloadDashboardsImage:
      repository: curlimages/curl
      tag: 8.7.1
      sha: ""
      pullPolicy: IfNotPresent
    envFromSecret: grafana-secret
    plugins:
      - dalvany-image-panel
      - fetzerch-sunandmoon-datasource
    ingress:
      enabled: true
      ingressClassName: internal
      hosts:
        - *host
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    testFramework:
      enabled: false